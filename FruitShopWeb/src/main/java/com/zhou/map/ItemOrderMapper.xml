<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.zhou.map.ItemOrderMapper">
    <!--定义 实体类和数据库映射字段部分-->
    <resultMap id="ResultMapItemOrder" type="com.zhou.pojo.ItemOrder">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="itemId" column="item_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="addTime" column="addTime" jdbcType="TIMESTAMP"/>
        <result property="total" column="total" jdbcType="VARCHAR"/>
        <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>

    </resultMap>

    <resultMap id="ResultMapItemOrderDto" type="com.zhou.pojo.ItemOrder">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="itemId" column="item_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="addTime" column="addTime" jdbcType="TIMESTAMP"/>
        <result property="total" column="total" jdbcType="VARCHAR"/>
        <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <association property="user" column="user_id" select="com.zhou.map.UserMapper.load"/>
        <collection property="details" column="id" ofType="com.zhou.pojo.OrderDetail" select="com.zhou.map.OrderDetailMapper.listByOrderId"/>
    </resultMap>
    <!--声明数据库字段-->
    <sql id="ItemOrder_field">
        id
        ,item_id,user_id,code,addTime,total,isDelete,status
    </sql>
    <!--实体类属性-->
    <sql id="ItemOrder_insert">
        #{id}
        ,
        #{item_id},
        #{user_id},
        #{code},
        #{addTime},
        #{total},
        #{isDelete},
        #{status}


    </sql>

    <!--更新的语句-->
    <sql id="ItemOrder_update">
        <if test="itemId != null">
            item_id=#{itemId},
        </if>
        <if test="userId != null">
            user_id=#{userId},
        </if>
        <if test="code != null">
            code=#{code},
        </if>
        <if test="addTime != null">
            addTime=#{addTime},
        </if>
        <if test="total != null">
            total=#{total},
        </if>
        <if test="isDelete != null">
            isDelete=#{isDelete},
        </if>
        <if test="status != null">
            status=#{status}
        </if>
    </sql>


    <!--查询时条件-->
    <sql id="ItemOrder_where">
        <if test="id != null">
            and id=#{id}
        </if>
        <if test="itemId != null">
            and item_id=#{itemId}
        </if>
        <if test="userId != null">
            and user_id=#{userId}
        </if>
        <if test="code != null">
            and code=#{code}
        </if>
        <if test="addTime != null">
            and addTime=#{addTime}
        </if>
        <if test="total != null">
            and total=#{total}
        </if>
        <if test="isDelete != null">
            and isDelete=#{isDelete}
        </if>
        <if test="status != null">
            and status=#{status}
        </if>
    </sql>


    <!-- 新增 -->
    <!--  参数：实体类
          返回：主键-->
    <insert id="insert" parameterType="com.zhou.pojo.ItemOrder" useGeneratedKeys="true" keyProperty="id">
        insert into item_order (
        <include refid="ItemOrder_field"/>
        ) values (
        <include refid="ItemOrder_insert"/>
        )
    </insert>

    <!-- 通过实体主键进行删除-->
    <!--参数：id-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete
        from item_order
        where id = #{id}
    </delete>

    <!--通过实体删除-->
    <delete id="deleteByEntity" parameterType="com.zhou.pojo.ItemOrder">
        delete from item_order where 1=1
        <include refid="ItemOrder_where"/>
    </delete>

    <!--通过Map 删除-->
    <delete id="deleteByMap" parameterType="java.util.Map">
        delete from item_order where 1=1
        <include refid="ItemOrder_where"/>
    </delete>

    <!--更新一个实体-->
    <update id="update" parameterType="com.zhou.pojo.ItemOrder">
        update item_order
        <set>
            <include refid="ItemOrder_update"/>
        </set>
        <where>
            <include refid="ItemOrder_where"/>
        </where>
    </update>

    <!--通过 id进行修改-->
    <update id="updateById" parameterType="com.zhou.pojo.ItemOrder">
        update item_order
        <set>
            <include refid="ItemOrder_update"/>
        </set>
        where id=#{id}
    </update>

    <!--根据 参数 查询-->
    <select id="listByMap" resultMap="ResultMapItemOrder" parameterType="map">
        select
        <include refid="ItemOrder_field"/>
        from item_order where 1=1
        <include refid="ItemOrder_where"/>
    </select>

    <!--查询所有实体-->
    <select id="listAll" resultMap="ResultMapItemOrder">
        select
        <include refid="ItemOrder_field"/>
        from item_order
    </select>

    <!--查询所有实体,根据实体属性值为判断条件查询所有实体-->
    <select id="listAllByEntity" resultMap="ResultMapItemOrder">
        select
        <include refid="ItemOrder_field"/>
        from item_order
        where 1=1
        <include refid="ItemOrder_where"/>
    </select>

    <!--根据主键 获取一个实体-->
    <select id="getById" resultMap="ResultMapItemOrder" parameterType="java.lang.Integer">
        select
        <include refid="ItemOrder_field"/>
        from item_order
        where id = #{id}
    </select>

    <!--通过map查询-->
    <select id="getByMap" resultMap="ResultMapItemOrder" parameterType="java.util.Map">
        select
        <include refid="ItemOrder_field"/>
        from item_order
        where 1=1
        <include refid="ItemOrder_where"/>
    </select>
    <!--根据主键获取一个实体-->
    <select id="load" resultMap="ResultMapItemOrder" parameterType="java.lang.Integer">
        select
        <include refid="ItemOrder_field"></include>
        from item_order where 1=1
       and id=#{id}
    </select>
    <!--通过实体查询-->
    <select id="getByEntity" resultMap="ResultMapItemOrder" parameterType="com.zhou.pojo.ItemOrder">
        select
        <include refid="ItemOrder_field"/>
        from item_order
        where 1=1
        <include refid="ItemOrder_where"/>
    </select>
    <!--批量新增-->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into item_order(
        <include refid="ItemOrder_field"/>
        )values
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.item_id},
            #{item.user_id},
            #{item.code},
            #{item.addTime},
            #{item.total},
            #{item.isDelete},
            #{item.status})
        </foreach>
    </insert>

    <!--批量修改-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update item_order
            <set>
                <if test="itemId != null">
                    item_id=#{item.itemId},
                </if>
                <if test="userId != null">
                    user_id=#{item.userId},
                </if>
                <if test="code != null">
                    code=#{item.code},
                </if>
                <if test="addTime != null">
                    addTime=#{item.addTime},
                </if>
                <if test="total != null">
                    total=#{item.total},
                </if>
                <if test="isDelete != null">
                    isDelete=#{item.isDelete},
                </if>
                <if test="status != null">
                    status=#{item.status}
                </if>
            </set>
            were 1=1
            <if test="item.id !=null">
                and id= #{item.id}
            </if>
        </foreach>
    </update>

    <!--封装存sql语句-->
    <!--查询一个对象返回实体类-->
    <!--    <select id="getBySqlReturnMap" resultMap="map">-->
    <!--        ${sql}-->
    <!--    </select>-->

    <!--    &lt;!&ndash;查询一个对象返回map&ndash;&gt;-->
    <!--&lt;!&ndash;    <select id="getBySqlReturnEntity" resultMap="java.util.Map">&ndash;&gt;-->
    <!--&lt;!&ndash;        ${sql}&ndash;&gt;-->
    <!--&lt;!&ndash;    </select>&ndash;&gt;-->

    <!--    &lt;!&ndash;查询列表返回一个实体&ndash;&gt;-->
    <select id="listBySqlReturnEntity" resultMap="ResultMapItemOrderDto">
        ${sql}
    </select>

    <!--    &lt;!&ndash;查询列表返回map&ndash;&gt;-->
    <!--    <select id="listBySqlReturnMap" resultMap="java.util.Map">-->
    <!--        ${sql}-->
    <!--    </select>-->

    <!--    &lt;!&ndash;查询分页&ndash;&gt;-->
    <select id="findBySqlRerturnEntity" resultMap="ResultMapItemOrderDto">
        ${sql}
    </select>

    <!--    &lt;!&ndash;通过sql修改&ndash;&gt;-->
    <select id="updateBysql">
        ${sql}
    </select>

    <!--    &lt;!&ndash;通过sql删除&ndash;&gt;-->
    <!--    <select id="deleteBySql" resultMap="java.util.Map">-->
    <!--        ${sql}-->
    <!--    </select>-->
    <!--    <select id="findBySqlRerturnEntity"  >-->
    <!--        ${sql}-->
    <!--    </select>-->
</mapper>