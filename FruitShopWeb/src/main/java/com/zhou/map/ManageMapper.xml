<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.zhou.map.ManageMapper">
    <!--定义 实体类和数据库映射字段部分-->
    <resultMap id="ResultMapManage" type="com.zhou.pojo.Manage">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="realName" column="realName" jdbcType="VARCHAR"/>
    </resultMap>
    <!--声明数据库字段-->
    <sql id="Manage_field">
        id,username,password,realName
    </sql>
    <!--实体类属性-->
    <sql id="Manage_insert">
        #{id},#{userName},#{password},#{realName}
    </sql>

     <!--查询时条件-->
    <sql id="Manage_where">
        <if test="id != null">
            and id=#{id}
        </if>
        <if test="userName != null">
            and userName=#{userName}
        </if>
        <if test="password != null">
            and password=#{password}
        </if>
        <if test="realName != null">
            and realName=#{realName}
        </if>
    </sql>


    <!--更新的语句-->
    <sql id="Manage_update">
     
        <if test="userName != null">
            and userName=#{id}
        </if>
        <if test="password != null">
            and password=#{password}
        </if>
        <if test="realName != null">
            and realName=#{realName}
        </if>
    </sql>


    <!-- 新增 -->
    <!--  参数：实体类
          返回：主键-->
    <insert id="insert" parameterType="com.zhou.pojo.Manage" useGeneratedKeys="true" keyProperty="id">
        insert  into manage(
         <include refid="Manage_field"/>
        ) values (
         <include refid="Manage_insert"/>
        )
    </insert>

    <!-- 通过实体主键进行删除-->
    <!--参数：id-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from manage where id=#{id}
    </delete>

    <!--通过实体删除-->
    <delete id="deleteByEntity" parameterType="com.zhou.pojo.Manage">
        delete from manage where 1=1
        <include refid="Manage_where"/>
    </delete>
    
    <!--通过Map 删除-->
    <delete id="deleteByMap" parameterType="java.util.Map">
        delete from manage where 1=1
        <include refid="Manage_where"/>
    </delete>
    
    <!--更新一个实体-->
    <update id="update" parameterType="com.zhou.pojo.Manage">
        update manage 
        <set>
            <include refid="Manage_update"/>
        </set>
        <where>
            <include refid="Manage_where"/>
        </where>
    </update>

    <!--通过 id进行修改-->
    <update id="updateById" parameterType="com.zhou.pojo.Manage">
        update manage
        <set>
            <include refid="Manage_update"/>
        </set>
        where id=#{id}
    </update>

    <!--根据 参数 查询-->
    <select id="listByMap" resultMap="ResultMapManage" parameterType="map">
        select <include refid="Manage_field"/>
        from manage where 1=1
        <include refid="Manage_where"/>
    </select>
    
    <!--查询所有实体-->
    <select id="listAll" resultMap="ResultMapManage">
        select <include refid="Manage_field"/>
        from manage
    </select>
    
    <!--查询所有实体,根据实体属性值为判断条件查询所有实体-->
    <select id="listAllByEntity" resultMap="ResultMapManage">
        select <include refid="Manage_field"/>
        from manage
        where 1=1
        <include refid="Manage_where"/>
    </select>

    <!--根据主键 获取一个实体-->
    <select id="getById" resultMap="ResultMapManage" parameterType="java.lang.Integer">
        select <include refid="Manage_field"/>
        from manage
        where id = #{id}
    </select>

    <!--通过map查询-->
    <select id="getByMap" resultMap="ResultMapManage" parameterType="java.util.Map">
        select <include refid="Manage_field"/>
        from manage
        where 1=1 <include refid="Manage_where"/>
    </select>

    <!--通过实体查询-->
    <select id="getByEntity" resultMap="ResultMapManage" parameterType="com.zhou.pojo.Manage">
        select <include refid="Manage_field"/>
        from manage
        where 1=1 <include refid="Manage_where"/>
    </select>
    <!--批量新增-->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into manage(
         <include refid="Manage_field"/>
        )values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userName},#{item.password},#{item.realName})
        </foreach>
    </insert>

    <!--批量修改-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update manage
            <set>
                <if test="item.userName != null">
                    userName=#{item.userName},
                </if>
                <if test="item.password != null">
                    password=#{item.password},
                </if>
                <if test="item.realName != null">
                    realName=#{item.realName}
                </if>
            </set>
            were 1=1
            <if test="item.id !=null">
                and id= #{item.id}
            </if>
        </foreach>
    </update>

    <!--封装存sql语句-->
    <!--查询一个对象返回实体类-->
<!--    <select id="getBySqlReturnMap" resultMap="map">-->
<!--        ${sql}-->
<!--    </select>-->

<!--    &lt;!&ndash;查询一个对象返回map&ndash;&gt;-->
<!--&lt;!&ndash;    <select id="getBySqlReturnEntity" resultMap="java.util.Map">&ndash;&gt;-->
<!--&lt;!&ndash;        ${sql}&ndash;&gt;-->
<!--&lt;!&ndash;    </select>&ndash;&gt;-->

<!--    &lt;!&ndash;查询列表返回一个实体&ndash;&gt;-->
<!--    <select id="listBySqlReturnEntity" resultMap="ResultMapManage">-->
<!--        ${sql}-->
<!--    </select>-->

<!--    &lt;!&ndash;查询列表返回map&ndash;&gt;-->
<!--    <select id="listBySqlReturnMap" resultMap="java.util.Map">-->
<!--        ${sql}-->
<!--    </select>-->

    <!--查询分页-->
<!--     <select id="findBySqlRerturnEntity" resultMap="re">-->
<!--        ${sql}-->
<!--    </select>-->

<!--    &lt;!&ndash;通过sql修改&ndash;&gt;-->
<!--    <select id="updateBysql" resultMap="java.util.Map">-->
<!--        ${sql}-->
<!--    </select>-->

<!--    &lt;!&ndash;通过sql删除&ndash;&gt;-->
<!--    <select id="deleteBySql" resultMap="java.util.Map">-->
<!--        ${sql}-->
<!--    </select>-->
</mapper>